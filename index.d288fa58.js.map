{"mappings":"AAAA,MACMA,EAAUC,SAASC,cAAc,YAqB1BC,EAAeC,IAC1B,MAAMC,EAAeD,EAClBE,KAAIC,GACI,gDACgCA,EAAMC,4DAE3CD,EAAME,gCACaF,EAAMG,sEAGpBH,EAAMG,qHAIJH,EAAMI,6EAGNC,SAASL,EAAMM,sEAMzBC,KAAK,IAERd,EAAQe,mBAAmB,YAAaV,EAAa,EAclBW,WACnC,MAAMC,OAZoBD,WAE1B,IACE,MAAME,QAAiBC,MAFJ,6FAInB,aADqBD,EAASE,M,CAE9B,MAAOC,GACPC,QAAQC,IAAIF,E,GAKeG,GAC7BF,QAAQC,IAAIN,GACZd,EAAac,EAAeQ,QAAQ,EAGtCC,GCzDO,MAiBMC,EAAWX,MAAMY,IAC5B,IACE,MAAMV,QAAiBC,MACrBU,4FAA4CD,EAA5CC,WAEIC,QAAaZ,EAASE,OAC5BE,QAAQC,IAAI,8CAA4CK,MACvDN,QAAOC,IAAIO,GAEZ3B,EAAa2B,EAAKL,Q,CAClB,MAAOJ,GACPC,QAAQD,MAAMA,E,GCpCZU,EAAc9B,SAASC,cAAc,YACrC8B,EAAY/B,SAASC,cAAc,2BCCxBD,SAASC,cAAc,uBAE/B+B,iBAAiB,UDDnB,SAAsBC,GAC3BA,EAAMC,iBAEN,MAAMC,EAA0BJ,EAAUK,MAAMC,OAE3CF,IAILL,EAAYQ,YAAc,GAC1BZ,EAASS,G,ICNXT,EAAS,SFCiBX,OAAOwB,EAAO,KACtC,IACE,MAAMtB,QAAiBC,MACrBsB,4FAA+CD,GAE3CV,QAAaZ,EAASE,OAC5BE,QAAQC,IAAI,mDACXD,QAAOC,IAAIO,GAEZ3B,EAAa2B,EAAKL,Q,CAClB,MAAOJ,GACPC,QAAQD,MAAMA,E,GEXlB,GFkCyBL,WACvB,IACE,MAAME,QAAiBC,MAAMuB,0FACvBZ,QAAaZ,EAASE,OAC5BE,QAAQC,IAAI,sDACZD,QAAQC,IAAIO,E,CAEZ,MAAOT,GACPC,QAAQD,MAAMA,E,GEzClB","sources":["src/js/rendering/render.js","src/js/fetches/movies.js","src/js/search-form-handler.js","src/index.js"],"sourcesContent":["const API_KEY = 'b118f38ec77100db6763b4cc83604589';\nconst gallery = document.querySelector('.gallery');\n\n// const fetchGenres = async () => {\n//   const genreArray = `https://api.themoviedb.org/3/genre/movie/list?api_key=${API_KEY}`;\n//   try {\n//     const response = await fetch(genreArray);\n//     const genres = await response.json();\n//     return genres;\n//   } catch (error) {\n//     console.log(error);\n//   }\n// };\n\n// fetchGenres();\n\n// Ustalic genres:\n// poiterowac po main genre array z serwera\n// sprawdzic czy id ten sam co w danym movie\n//let genreIds = \"\";\n//genreIds+= genres z array\n\nexport const renderMovies = movies => {\n  const markupMovies = movies\n    .map(movie => {\n      return `\n    <div class=\"movie-card\" data-movie-id=\"${movie.id}\">\n      <img src=\"https://image.tmdb.org/t/p/original${\n        movie.poster_path\n      }\" height=574 alt=\"${movie.original_title}\"/>\n    \n      <p class=\"movie-title\">\n        <b>${movie.original_title}</b>\n      </p>\n      <div class=\"movie-subtitle\">\n        <p class=\"movie-genre\">\n          <b>${movie.genre_ids}</b>\n        </p>\n        <p class=\"movie-year\">\n          <b>${parseInt(movie.release_date)}</b>\n        </p>\n      </div>\n    </div>\n  </a>`;\n    })\n    .join('');\n\n  gallery.insertAdjacentHTML('beforeend', markupMovies);\n};\n\nconst fetchTrendingMovies = async () => {\n  const movieGallery = `https://api.themoviedb.org/3/trending/movie/week?api_key=${API_KEY}`;\n  try {\n    const response = await fetch(movieGallery);\n    const movies = await response.json();\n    return movies;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nconst startRenderingTrendingMovies = async () => {\n  const trendingMovies = await fetchTrendingMovies();\n  console.log(trendingMovies);\n  renderMovies(trendingMovies.results);\n};\n\nstartRenderingTrendingMovies();\n","import { renderMovies } from '../rendering/render';\n\n// ------ nessesary for work ------\nconst apiKey = '11f568ee70218bec08ad7368f7bb3250';\nconst apiUrl = 'https://api.themoviedb.org/3/search/movie';\nconst popularUrl = 'https://api.themoviedb.org/3/movie/popular';\nconst genresUrl = 'https://api.themoviedb.org/3/genre/movie/list';\nlet page = 1;\n\n//  1.    ------ Function - fetch - Popular movies ------\nexport const getPopular = async (page = 1) => {\n  try {\n    const response = await fetch(\n      popularUrl + `?api_key=` + apiKey + '&page=' + page\n    );\n    const data = await response.json();\n    console.log('Poniżej przykladowy console.log dla popularnych');\n    console.log(data);\n    // TO DO function here!\n    renderMovies(data.results);\n  } catch (error) {\n    console.error(error);\n  }\n};\n\n//  2.    ------ function fetch - Movie checker - by title ------\n// movieTitle is a .value from header input\nexport const getMovie = async movieTitle => {\n  try {\n    const response = await fetch(\n      apiUrl + `?api_key=` + apiKey + '&query=' + movieTitle + '&page=' + page\n    );\n    const data = await response.json();\n    console.log(`Poniżej przykladowy console.log dla filmu \"${movieTitle}\"`);\n    console.log(data);\n    //TO DO function here!\n    renderMovies(data.results);\n  } catch (error) {\n    console.error(error);\n  }\n};\n\n// 3.\n//?api_key=<<api_key>>&language=en-US\nexport const getGenres = async () => {\n  try {\n    const response = await fetch(genresUrl + `?api_key=` + apiKey);\n    const data = await response.json();\n    console.log('Poniżej przykladowy console.log dla listy gatunków');\n    console.log(data);\n    //TO DO function here!\n  } catch (error) {\n    console.error(error);\n  }\n};\n","import { getMovie } from './fetches/movies';\n\nconst GALLERY_DOM = document.querySelector('.gallery');\nconst INPUT_DOM = document.querySelector('.header-input__text-box');\n\nexport function handleSubmit(event) {\n  event.preventDefault();\n\n  const searchingPhrasesTrimmed = INPUT_DOM.value.trim();\n\n  if (!searchingPhrasesTrimmed) {\n    return;\n  }\n\n  GALLERY_DOM.textContent = '';\n  getMovie(searchingPhrasesTrimmed);\n}\n","import { getMovie, getPopular, getGenres } from './js/fetches/movies.js';\n//*? Powyższy import nie jest jeszcze używany - możliwe, że nie będzie potrzebny w ogóle.\nimport { handleSubmit } from './js/search-form-handler.js';\n\nconst FORM_DOM = document.querySelector('.header-input__form');\n\nFORM_DOM.addEventListener('submit', handleSubmit);\n\n//for result for \"Rambo\" check console and use example from below\ngetMovie('Rambo');\ngetPopular();\ngetGenres();\n\n// import { renderMovies } from './js/rendering/render.js';\n"],"names":["$bce6340fb64d7774$var$gallery","document","querySelector","$bce6340fb64d7774$export$1a30573fde3dfc62","movies","markupMovies","map","movie","id","poster_path","original_title","genre_ids","parseInt","release_date","join","insertAdjacentHTML","async","trendingMovies","response","fetch","json","error","console","log","$bce6340fb64d7774$var$fetchTrendingMovies","results","$bce6340fb64d7774$var$startRenderingTrendingMovies","$b099a20c123379bc$export$bdba5afeee6501b","movieTitle","$b099a20c123379bc$var$apiUrl","data","$f196cf184bbcfd78$var$GALLERY_DOM","$f196cf184bbcfd78$var$INPUT_DOM","addEventListener","event","preventDefault","searchingPhrasesTrimmed","value","trim","textContent","page1","$b099a20c123379bc$var$popularUrl","$b099a20c123379bc$var$genresUrl"],"version":3,"file":"index.d288fa58.js.map"}