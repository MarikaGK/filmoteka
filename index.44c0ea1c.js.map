{"mappings":"oeAAA,IAAAA,EAAAC,EAAA,SCAAD,EAAAC,EAAA,SAEA,MAAMC,EAAcC,SAASC,cAAc,YACrCC,EAAYF,SAASC,cAAc,2BACnCE,EAAsBH,SAASC,cAAc,uB,yCCJnD,MAAMG,EAAuBJ,SAASC,cAAc,oB,iBCApDI,EAAAP,EAAA,S,8BHkBA,MAAMQ,EAAWN,SAASC,cAAc,uBAClCM,EAAcP,SAASC,cAAc,YACrCO,EAAgBR,SAASC,cAAc,mBACvCQ,EAAcT,SAASC,cAAc,yBACrCS,EAAiBV,SAASC,cAAc,0BAE9CK,EAASK,iBAAiB,UClBnB,SAAsBC,GAC3BA,EAAMC,iBAEN,MAAMC,EAA0BZ,EAAUa,MAAMC,OAChDb,EAAoBc,YAAc,GAC7BH,GAKLf,EAAYkB,YAAc,IAC1B,EAAApB,EAAAqB,kBAAiBJ,IALfX,EAAoBc,YAAc,4B,IDatCV,EAAYI,iBAAiB,SGtBEQ,IAC3B,MAAMC,EAAkBD,EAAIE,OAAOC,cAAcA,cAC5CF,EAAgBG,UAAUC,SAAS,iBACxC,EAAAnB,EAAAoB,gBACA,EAAA5B,EAAA6B,cAAaN,EAAgBO,QAAQC,UACrC,EAAAvB,EAAAwB,eAAa,IHkBjBpB,EAAYE,iBAAiB,QAASmB,EAAAC,kBACtCvB,EAAcG,iBAAiB,SAASQ,IACtCA,EAAIN,iBACJH,EAAea,UAAUS,OAAO,YAAY,KAG9C,EAAAnC,EAAAoC,iCACA,EAAAC,EAAAC,gBACA,EAAAtC,EAAAuC,oBIlCmC,MAC/B,MAAMC,EAAaC,aAAaC,QAAQ,uBAClCC,EAAmBC,KAAKC,MAAML,GAC9BM,EAAiB3C,SAASC,cAAc,0BACxC2C,EAASJ,EAAiBK,KAAKC,GAAa,qCAAqCA,EAASC,OAAOD,EAASE,iEAC1DF,EAASC,uBAG1DE,KAAK,IACVN,EAAeO,mBAAmB,YAAaN,EAAO,EJ0B1D,IACA,EAAAO,EAAAC,oBAUA,MAAMC,EAAuBrD,SAASC,cAAc,oBACpDqD,OAAO3C,iBAAiB,UE7CU,KAC5B2C,OAAOC,QAAU,IACnBnD,EAAqBmB,UAAUiC,OAAO,aAEtCpD,EAAqBmB,UAAUkC,IAAI,YAAY,IF0CnDJ,EAAqB1C,iBAAiB,SEtCX,KACzB2C,OAAOI,SAAS,CAACC,IAAK,EAAGC,SAAU,UAAY,KFwCjD,EAAAC,EAAAC","sources":["src/index.js","src/js/utils/search-form-handler.js","src/js/utils/scroll-to-top.js","src/js/utils/gallery-handler.js","src/js/rendering/render-multiselectBox.js"],"sourcesContent":["import {\n  getPopularMovies,\n  getMovieGenresAndSaveToStore,\n  getMovieById,\n  getMoviesByArrayOfIds,\n} from './js/fetching/fetch-movies.js';\n\nimport { handleSubmit } from './js/utils/search-form-handler.js';\n//toggle modal fn\nimport { onShowModal, toggleModal } from './js/utils/modal-movie-details.js';\nimport { startLoader } from './js/utils/loader.js';\nimport { setDarkOrNormalModeOnPageLoadFromLocalStorageState } from './js/utils/dark-mode-switch.js';\nimport { showButtonOnScroll, scrollToTop } from './js/utils/scroll-to-top.js';\nimport { renderPagination } from './js/rendering/render-pagination.js';\nimport { galleryHandler } from './js/utils/gallery-handler.js';\nimport { renderCategoriesBox } from './js/rendering/render-multiselectBox.js';\nimport { discoveryHandler } from './js/utils/categories-filter.js';\n\nconst FORM_DOM = document.querySelector('.header-input__form');\nconst GALLERY_DOM = document.querySelector('.gallery');\nconst BROWSE_BUTTON = document.querySelector('.header__browse');\nconst FIND_BUTTON = document.querySelector('.header__selectButton');\nconst CATEGORIES_BOX = document.querySelector('.header__categoriesBox');\n\nFORM_DOM.addEventListener('submit', handleSubmit);\nGALLERY_DOM.addEventListener('click', galleryHandler);\nFIND_BUTTON.addEventListener('click', discoveryHandler);\nBROWSE_BUTTON.addEventListener('click', evt => {\n  evt.preventDefault();\n  CATEGORIES_BOX.classList.toggle('is-hidden');\n});\n\ngetMovieGenresAndSaveToStore();\nstartLoader();\ngetPopularMovies();\nrenderCategoriesBox();\nrenderPagination();\n\n// const paginationClickerContainer = document.querySelector('.pagination', false)\n// const paginationClicker = paginationClickerContainer.querySelectorAll('a.tui-page-btn')\n\n// paginationClicker.addEventListener(\"click\", ()=>{\n//     console.log(paginationClicker.value)\n// })\n\n//* Scroll site to top\nconst SCROLL_UP_BUTTON_DOM = document.querySelector('.scroll-up-arrow');\nwindow.addEventListener('scroll', showButtonOnScroll);\nSCROLL_UP_BUTTON_DOM.addEventListener('click', scrollToTop);\n\n//* DARK MODE\nsetDarkOrNormalModeOnPageLoadFromLocalStorageState();\n","import { getMoviesByTitle } from '../fetching/fetch-movies';\n\nconst GALLERY_DOM = document.querySelector('.gallery');\nconst INPUT_DOM = document.querySelector('.header-input__text-box');\nconst NO_HIT_INFO_DIV_DOM = document.querySelector('.header-no-hit-info');\n\nexport function handleSubmit(event) {\n  event.preventDefault();\n\n  const searchingPhrasesTrimmed = INPUT_DOM.value.trim();\n  NO_HIT_INFO_DIV_DOM.textContent = '';\n  if (!searchingPhrasesTrimmed) {\n    NO_HIT_INFO_DIV_DOM.textContent = 'Type your movie title here';\n    return;\n  }\n\n  GALLERY_DOM.textContent = '';\n  getMoviesByTitle(searchingPhrasesTrimmed);\n}\n","const SCROLL_UP_BUTTON_DOM = document.querySelector('.scroll-up-arrow');\n\nexport const showButtonOnScroll = () => {\n  if (window.scrollY > 800) {\n    SCROLL_UP_BUTTON_DOM.classList.remove('is-hidden');\n  } else {\n    SCROLL_UP_BUTTON_DOM.classList.add('is-hidden');\n  }\n};\n\nexport const scrollToTop = () => {\n  window.scrollTo({top: 0, behavior: 'smooth', });\n};","import { onShowModal, toggleModal } from \"./modal-movie-details\";\nimport { getMovieById } from \"../fetching/fetch-movies\";\n\nexport const galleryHandler = (evt) => {\n    const singleMovieCard = evt.target.parentElement.parentElement;\n    if (!singleMovieCard.classList.contains('movie-card')) return;\n    toggleModal();\n    getMovieById(singleMovieCard.dataset.movieId);\n    onShowModal();\n}","export const renderCategoriesBox = () => {\n    const categories = localStorage.getItem('movieGenresIdsArray');\n    const parsedCategories = JSON.parse(categories);\n    const multiselectBox = document.querySelector('.header__categoriesBox')\n    const markup = parsedCategories.map((category) => `<label class=\"header__label\" for=\"${category.id}\">${category.name}\n    <input type=\"checkbox\" class=\"header__checkbox\" id=\"${category.id}\">\n    </label>`\n    )\n        .join('');\n    multiselectBox.insertAdjacentHTML('beforeend', markup)\n\n}\n\n"],"names":["$aTIOK","parcelRequire","$009e8cd9d9dd22d5$var$GALLERY_DOM","document","querySelector","$009e8cd9d9dd22d5$var$INPUT_DOM","$009e8cd9d9dd22d5$var$NO_HIT_INFO_DIV_DOM","$e091f5028fc4cf26$var$SCROLL_UP_BUTTON_DOM","$4Cu73","$1f0dc3b9307be026$var$FORM_DOM","$1f0dc3b9307be026$var$GALLERY_DOM","$1f0dc3b9307be026$var$BROWSE_BUTTON","$1f0dc3b9307be026$var$FIND_BUTTON","$1f0dc3b9307be026$var$CATEGORIES_BOX","addEventListener","event","preventDefault","searchingPhrasesTrimmed","value","trim","textContent","getMoviesByTitle","evt","singleMovieCard","target","parentElement","classList","contains","toggleModal","getMovieById","dataset","movieId","onShowModal","$6ghLp","discoveryHandler","toggle","getMovieGenresAndSaveToStore","$aVGVk","startLoader","getPopularMovies","categories","localStorage","getItem","parsedCategories","JSON","parse","multiselectBox","markup","map","category","id","name","join","insertAdjacentHTML","$a8AVW","renderPagination","$1f0dc3b9307be026$var$SCROLL_UP_BUTTON_DOM","window","scrollY","remove","add","scrollTo","top","behavior","$1KQvo","setDarkOrNormalModeOnPageLoadFromLocalStorageState"],"version":3,"file":"index.44c0ea1c.js.map"}