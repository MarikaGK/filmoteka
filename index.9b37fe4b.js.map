{"mappings":"AAWO,MCVDA,EAAUC,SAASC,cAAc,YAuDFC,WACnC,MAAMC,OAZoBD,WAE1B,IACE,MAAME,QAAiBC,MAFJ,6FAInB,aADqBD,EAASE,M,CAE9B,MAAOC,GACPC,QAAQC,IAAIF,E,GAKeG,GAC7BF,QAAQC,IAAIN,GApCc,CAAAQ,IAC1B,MAAMC,EAAeD,EAClBE,KAAIC,GACI,sDACsCA,EAAMC,gCAAgCD,EAAME,kCAAkCF,EAAMG,kFAG1HH,EAAME,6EAGNF,EAAMI,uEAGNJ,EAAMK,qDAKdC,KAAK,IAERrB,EAAQsB,mBAAmB,YAAaT,EAAa,EAiBrDU,CAAanB,EAAeoB,QAAQ,EAGtCC","sources":["src/js/fetches/movies.js","src/render.js"],"sourcesContent":["\n\n// ------ nessesary for work ------ \nconst apiKey = \"11f568ee70218bec08ad7368f7bb3250\";\nconst apiUrl = \"https://api.themoviedb.org/3/search/movie\";\nconst popularUrl = \"https://api.themoviedb.org/3/movie/popular\"\nconst genresUrl = \"https://api.themoviedb.org/3/genre/movie/list\"\nlet page = 1;\n\n\n//  1.    ------ Function - fetch - Popular movies ------ \nexport const getPopular = async (page = 1) => {\n    try{\n      const response = await fetch(popularUrl + `?api_key=` + apiKey + '&page=' + page)\n      const data = await response.json();\n      console.log('Poniżej przykladowy console.log dla popularnych')\n      console.log(data)\n// TO DO function here!\n    }catch(error){\n      console.error(error);\n    }\n  }\n\n//  2.    ------ function fetch - Movie checker - by title ------ \n// movieTitle is a .value from header input\nexport const getMovie = async (movieTitle) => {\n    try {\n      const response = await fetch(apiUrl + `?api_key=` + apiKey + '&query=' + movieTitle + '&page=' + page);\n      const data = await response.json();\n      console.log('Poniżej przykladowy console.log dla filmu \"Rambo\"')\n      console.log(data)\n//TO DO function here!\n    } catch (error) {\n      console.error(error);\n    }}\n\n\n// 3.\n//?api_key=<<api_key>>&language=en-US\nexport const getGenres = async () =>{\n  try {\n    const response = await fetch(genresUrl + `?api_key=` + apiKey);\n    const data = await response.json();\n    console.log('Poniżej przykladowy console.log dla listy gatunków')\n    console.log(data)\n//TO DO function here!\n  } catch (error) {\n    console.error(error);\n  }}\n","const API_KEY = 'b118f38ec77100db6763b4cc83604589';\nconst gallery = document.querySelector('.gallery');\n\n// const fetchGenres = async () => {\n//   const genreArray = `https://api.themoviedb.org/3/genre/movie/list?api_key=${API_KEY}`;\n//   try {\n//     const response = await fetch(genreArray);\n//     const genres = await response.json();\n//     return genres;\n//   } catch (error) {\n//     console.log(error);\n//   }\n// };\n\n// fetchGenres();\n\n// Ustalic genres:\n// poiterowac po main genre array z serwera\n// sprawdzic czy id ten sam co w danym movie\n//let genreIds = \"\";\n//genreIds+= genres z array\n\nexport const renderMovies = movies => {\n  const markupMovies = movies\n    .map(movie => {\n      return `\n    <img src=\"https://image.tmdb.org/t/p/original${movie.poster_path}\" height=574 alt=\"${movie.original_title}\" data-movie-id=\"${movie.id}\"/>\n    <div class=\"movie-card\">\n      <p class=\"movie-title\">\n        <b>${movie.original_title}</b>\n      </p>\n      <p class=\"movie-genre\">\n        <b>${movie.genre_ids}</b>\n      </p>\n      <p class=\"movie-year\">\n        <b>${movie.release_date}</b>\n      </p>\n    </div>\n  </a>`;\n    })\n    .join('');\n\n  gallery.insertAdjacentHTML('beforeend', markupMovies);\n};\n\nconst fetchTrendingMovies = async () => {\n  const movieGallery = `https://api.themoviedb.org/3/trending/movie/week?api_key=${API_KEY}`;\n  try {\n    const response = await fetch(movieGallery);\n    const movies = await response.json();\n    return movies;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nconst startRenderingTrendingMovies = async () => {\n  const trendingMovies = await fetchTrendingMovies();\n  console.log(trendingMovies);\n  renderMovies(trendingMovies.results);\n};\n\nstartRenderingTrendingMovies();\n"],"names":["$54572758c4217ba8$var$gallery","document","querySelector","async","trendingMovies","response","fetch","json","error","console","log","$54572758c4217ba8$var$fetchTrendingMovies","movies","markupMovies","map","movie","poster_path","original_title","id","genre_ids","release_date","join","insertAdjacentHTML","$54572758c4217ba8$export$1a30573fde3dfc62","results","$54572758c4217ba8$var$startRenderingTrendingMovies"],"version":3,"file":"index.9b37fe4b.js.map"}